name: Release version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Type"
        default: "minor"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
      - name: maven-settings
        uses: s4u/maven-settings-action@v2
        with:
          servers: '[{"id": "github", "username": "${{ github.repository_owner }}", "password": "${{ secrets.GITHUB_TOKEN }}"}]'

      - name: Install dependencies
        run: mvn validate

      - name: Build and Test
        run: mvn clean install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "release-bot";
          git config --global user.email "release-bot@github.com";

          if [[ "${{ inputs.environment }}" == "major" ]]; then
              echo "Increase the major version."
              
              MAVEN_OPTION="$MAVEN_OPTION -DdevelopmentVersion=\${parsedVersion.nextMajorVersion}.0.0-SNAPSHOT"
          elif [[ "${{ inputs.environment }}" == "minor" ]]; then
              echo "Increase the minor version."
              
              MAVEN_OPTION="$MAVEN_OPTION -DdevelopmentVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT"
          else
              echo "Increase the patch version."
              
              MAVEN_OPTION="$MAVEN_OPTION -DdevelopmentVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT"
          fi

          echo "Do mvn release:prepare with options $MAVEN_OPTION"
          mvn $MAVEN_OPTION build-helper:parse-version release:prepare -B

          # do release if prepare did not fail
          if [[ ("$?" -eq 0) && ($SKIP_PERFORM == "false") ]]; then
            echo "Do mvn release:perform with options $MAVEN_OPTION"
            mvn $MAVEN_OPTION build-helper:parse-version release:perform -B"
          fi

          # rollback release if prepare or perform failed
          if [[ "$?" -ne 0 ]] ; then
            echo "Rolling back release after failure"
            mvn $MAVEN_OPTION release:rollback -B"
          fi
